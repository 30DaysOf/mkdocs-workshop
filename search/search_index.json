{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mkdocs Workshop This repository serves as an mkdocs-material based template for creating #30DaysOf websites that can be hosted on GitHub Pages endpoints. Features: The repository is instrumented with: A devcontainer . This means you can launch it with GitHub Codespaces (cloud) or Docker Desktop (local) to get a pre-build development environment for modifying and previewing the website. A GitHub Actions for MkDocs workflow. This means it will automatically rebuild and publish the website to GitHub Pages on very repo commit. You can also force a manual publish anytime with mkdocs gh-deploy --force . A Google Analytics tracker. This is useful for tracking user behaviors in your website and understanding where learners drop off most or have issues. It also demonstrates usage of built-in cookie consent support in mkdocs-material. Content: The repository contains: An Mkdocs Workshop tutorial that teaches you how this website was setup, and how you can customize or repurpose it for your new project. A Basic blog example that shows you what a #30DaysOf series structure could look like, with tips for syndication and SEO.","title":"Mkdocs Workshop"},{"location":"#mkdocs-workshop","text":"This repository serves as an mkdocs-material based template for creating #30DaysOf websites that can be hosted on GitHub Pages endpoints. Features: The repository is instrumented with: A devcontainer . This means you can launch it with GitHub Codespaces (cloud) or Docker Desktop (local) to get a pre-build development environment for modifying and previewing the website. A GitHub Actions for MkDocs workflow. This means it will automatically rebuild and publish the website to GitHub Pages on very repo commit. You can also force a manual publish anytime with mkdocs gh-deploy --force . A Google Analytics tracker. This is useful for tracking user behaviors in your website and understanding where learners drop off most or have issues. It also demonstrates usage of built-in cookie consent support in mkdocs-material. Content: The repository contains: An Mkdocs Workshop tutorial that teaches you how this website was setup, and how you can customize or repurpose it for your new project. A Basic blog example that shows you what a #30DaysOf series structure could look like, with tips for syndication and SEO.","title":"Mkdocs Workshop"},{"location":"01-Workshop/","text":"Using This Template","title":"Using This Template"},{"location":"01-Workshop/#using-this-template","text":"","title":"Using This Template"},{"location":"01-Workshop/01-Setup/01/","text":"1. Setup Basic Site 1.1 Installation When you \"instantiate\" this template you get a pre-built starter project using mkdocs.yml that contains all the necessary configuration and customization required to make it usable. In this workshop, we look under the hood to see how we got there from scratch. It all starts with installing mkdocs-material - in our case, this is done by the devcontainer.json file which defines a Python development environment and installs package dependencies specified in requirements.txt . In our case that last file contains mkdocs-material . So launching the repository from GitHub Codespaces or with Docker Desktop gives you a development environment ready for mkdocs. 1.2 Initialization The next step after that is to scaffold a new site . This is done with the following command: ```bash title=\"\" mkdocs new . This creates a default `mkdocs.yml` file with this single line: ```yml title=\"mkdocs.yml\" site_name: My Docs You can then preview what this site will look like by using the following command in the VS Code Terminal, at the root of the repo: bash title=\"\" mkdocs serve You will then see something like this. Note that this is using the basic mkdocs-material theme but does not have any customization (yet). 1.3 Congratulations! You have the basic mkdocs-material website running locally. Let's start taking steps to customize this, next.","title":"1. Setup Basic Site"},{"location":"01-Workshop/01-Setup/01/#1-setup-basic-site","text":"","title":"1. Setup Basic Site"},{"location":"01-Workshop/01-Setup/01/#11-installation","text":"When you \"instantiate\" this template you get a pre-built starter project using mkdocs.yml that contains all the necessary configuration and customization required to make it usable. In this workshop, we look under the hood to see how we got there from scratch. It all starts with installing mkdocs-material - in our case, this is done by the devcontainer.json file which defines a Python development environment and installs package dependencies specified in requirements.txt . In our case that last file contains mkdocs-material . So launching the repository from GitHub Codespaces or with Docker Desktop gives you a development environment ready for mkdocs.","title":"1.1 Installation"},{"location":"01-Workshop/01-Setup/01/#12-initialization","text":"The next step after that is to scaffold a new site . This is done with the following command: ```bash title=\"\" mkdocs new . This creates a default `mkdocs.yml` file with this single line: ```yml title=\"mkdocs.yml\" site_name: My Docs You can then preview what this site will look like by using the following command in the VS Code Terminal, at the root of the repo: bash title=\"\" mkdocs serve You will then see something like this. Note that this is using the basic mkdocs-material theme but does not have any customization (yet).","title":"1.2 Initialization"},{"location":"01-Workshop/01-Setup/01/#13-congratulations","text":"You have the basic mkdocs-material website running locally. Let's start taking steps to customize this, next.","title":"1.3 Congratulations!"},{"location":"01-Workshop/02-Customize/01/","text":"2. Customize MkDocs","title":"2. Customize MkDocs"},{"location":"01-Workshop/02-Customize/01/#2-customize-mkdocs","text":"","title":"2. Customize MkDocs"},{"location":"01-Workshop/03-Blog/01/","text":"3. Setup Blog","title":"3. Setup Blog"},{"location":"01-Workshop/03-Blog/01/#3-setup-blog","text":"","title":"3. Setup Blog"}]}